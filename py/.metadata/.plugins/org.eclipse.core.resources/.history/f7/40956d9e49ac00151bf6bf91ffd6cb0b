'''
Created on Dec 23, 2015

@author: nick
'''
#import numpy
#import pandas
#import sys
#import datetime
import pymysql.cursors

from numpy import *
from numpy.random import permutation
from pandas import DataFrame, Series
from pandas.io.data import DataReader
#from pandas_datareader import data, wb
from datetime import datetime
from yahoo_finance import Share
from urllib import *


class Quote(object):
   
    DATE_FMT = '%Y-%m-%d'
    TIME_FMT = '%H:%M:%S'
   
    def __init__(self):
        self.symbol = ''
        self.date,self.open_,self.high,self.low,self.close,self.volume,self.adj_close = ([] for _ in range(7))
        print ('Init Base Quote')
 
    def query(self):
        print ('\nProcessing ' + self.symbol + ': (Open High Low Volume)')
        tickerDR = DataReader(self.symbol,  'yahoo', datetime(2015,12,1), datetime(2015,12,23))
        print('\n')

        try:
            print ('\nOpen Connection to MySQL')
            connection = pymysql.connect(host='localhost', user='root', password='link', db='volarb', charset='utf8mb4', cursorclass=pymysql.cursors.DictCursor)
        
            for i in range(len(tickerDR)):
                self.date.append(str(tickerDR.index[i]))
                self.open_.append(float(tickerDR['Open'][i]))
                self.high.append(float(tickerDR['High'][i]))
                self.low.append(float(tickerDR['Low'][i]))
                self.close.append(float(tickerDR['Close'][i]))
                self.volume.append(int(tickerDR['Volume'][i]))            
                self.adj_close.append(float(tickerDR['Adj Close'][i]))
                with connection.cursor() as cursor:
                    # Create a new record
                    sql = "select fnInsertSecDaily('NASDAQ', 'SMART', %s, %s, %d, %d, %d, %d, %d, %d);"
                    retVal = cursor.execute(sql, (self.symbol, '2015-12-26', float(tickerDR['Open'][i]), float(tickerDR['High'][i]), \
                                                  float(tickerDR['Low'][i]), float(tickerDR['Close'][i]), float(tickerDR['Adj Close'][i]), float(tickerDR['Volume'][i])))
                    print ("Returned " + str(retVal))
            
                connection.commit()
                
            #self.append(tickerDR.index[i], tickerDR['Open'][i], tickerDR['High'][i], tickerDR['Low'][i], tickerDR['Close'][i], tickerDR['Volume'][i], tickerDR['Adj_Close'][i])\
            '''
            print (str(tickerDR.index[i]) + ',' + \
                    str(tickerDR['Open'][i]) + ',' + \
                    str(tickerDR['High'][i]) + ',' + \
                    str(tickerDR['Low'][i])  + "," + \
                    str(tickerDR['Close'][i])  + "," + \
                    str(tickerDR['Adj Close'][i])  + "," + \
                    str(tickerDR['Volume'][i])  + "," \
            )
            '''
        finally:
            print ('Close Connection to MySQL')
            connection.close()
                
            
    def __repr__(self):
        return self.symbol

class YahooQuote(Quote):
    ''' Daily quotes from Yahoo. Date format='yyyy-mm-dd' '''
    def __init__(self,symbol,start_date,end_date=datetime.today().isoformat()):
        super(YahooQuote,self).__init__()
        self.symbol = symbol.upper()
        print ('Init ' + self.symbol)
        #start_year,start_month,start_day = start_date.split('-')
        #start_month = str(int(start_month)-1)
        #end_year,end_month,end_day = end_date.split('-')
        #end_month = str(int(end_month)-1)
      
if __name__ == '__main__':
    pass

print ('Init Main')
tickers = ['NFLX', 'GOOG', 'TSLA', 'AAPL', 'MSFT']
for ticker in tickers:
    yq = YahooQuote(ticker, datetime(2015,12,1))
    yq.query()
